if  EXISTS (select * from sysobjects where [name] ='SP_AI_UPLOAD_EMPBANK')
drop  PROCEDURE SP_AI_UPLOAD_EMPBANK
go

CREATE PROCEDURE SP_AI_UPLOAD_EMPBANK
AS 
BEGIN
Declare @LASTCODE as VARCHAR(6)  
Declare @LASTCODESEQ as VARCHAR(8)  
BEGIN TRY  

-- insert bank details
INSERT INTO HS_HR_BANK (BANK_CODE, BANK_NAME, BANK_AUTO_CLR_HOUSE_CODE,BNK_MAIN)
SELECT DISTINCT BANK_CODE, BANK_NAME, BANK_CODE,0
FROM HS_HR_IA_BANK_UPLOAD
WHERE BANK_CODE IS NOT NULL AND  ltrim(rtrim(BANK_CODE))<>'' AND               
upper(BANK_CODE) NOT IN (SELECT upper(BANK_CODE) FROM HS_HR_BANK)


-- insert branch details
set @LASTCODE=0     
select @LASTCODE= isnull(abs(max(BBRANCH_CODE)),0) from HS_HR_BRANCH 
INSERT INTO HS_HR_BRANCH (BBRANCH_SLIPTRANSFERS_FLG, BBRANCH_AUTO_CLR_HOUSE_CODE, BBRANCH_NAME,BBRANCH_CODE,BANK_CODE)
SELECT 1,BRANCH_CODE,BRANCH_NAME,right('000000'+rtrim(ltrim(floor(row_number() over (ORDER by BRANCH_CODE) )+ @LASTCODE)),6) AS BBRANCH_CODE,BANK_CODE
FROM HS_HR_IA_BANK_UPLOAD
WHERE BRANCH_CODE IS NOT NULL AND  ltrim(rtrim(BRANCH_CODE))<>'' AND               
upper(BANK_CODE)+upper(BRANCH_CODE) NOT IN (SELECT upper(BANK_CODE)+upper(BBRANCH_AUTO_CLR_HOUSE_CODE) FROM HS_HR_BRANCH)
GROUP BY BRANCH_CODE,BRANCH_NAME,BANK_CODE


-- insert account type details
set @LASTCODE=0     
select @LASTCODE=  isnull(MAX(ACCTYPE_ID),'-1') FROM HS_HR_BANK_ACCOUNT_TYPE
INSERT INTO HS_HR_BANK_ACCOUNT_TYPE (ACCTYPE_ID, ACCTYPE_NAME)
SELECT  right('0'+rtrim(ltrim(floor(row_number() over (ORDER by ACCTYPE_ID) )+ @LASTCODE)),1) AS ACCTYPE_ID, ACCTYPE_ID
FROM HS_HR_IA_BANK_UPLOAD
WHERE ACCTYPE_ID IS NOT NULL AND  ltrim(rtrim(ACCTYPE_ID))<>'' AND               
upper(ACCTYPE_ID) NOT IN (SELECT upper(ACCTYPE_NAME) FROM HS_HR_BANK_ACCOUNT_TYPE)
GROUP BY ACCTYPE_ID

-- insert currency details
set @LASTCODE=0     
select @LASTCODE= isnull(abs(max(CURRENCY_ID)),0) from HS_HR_CURRENCY_TYPE 
INSERT INTO HS_HR_CURRENCY_TYPE (CURRENCY_ID, CURRENCY_NAME, CURRENCY_SYMBOL)
SELECT right('000000'+rtrim(ltrim(floor(row_number() over (ORDER by CURRENCY_SYMBOL) )+ @LASTCODE)),6) AS CURRENCY_ID, CURRENCY_SYMBOL, CURRENCY_SYMBOL
FROM HS_HR_IA_BANK_UPLOAD
WHERE CURRENCY_SYMBOL IS NOT NULL AND  ltrim(rtrim(CURRENCY_SYMBOL))<>'' AND               
upper(CURRENCY_SYMBOL) NOT IN (SELECT upper(CURRENCY_SYMBOL) FROM HS_HR_CURRENCY_TYPE)
GROUP BY CURRENCY_SYMBOL

-- INSERT main table data
INSERT INTO [HS_HR_EMP_BANK]
           ([BBRANCH_CODE]
           ,[EMP_NUMBER]
           ,[EBANK_ACC_NO]
           ,[EBANK_ACC_TYPE_FLG]
           ,[EBANK_ORDER]
           ,[EBANK_ACTIVE_FLAG]
           ,[CURRENCY_ID]
           ,[EMP_NAME])
select B.BBRANCH_CODE,E.EMP_NUMBER,EBANK_ACC_NO,A.ACCTYPE_ID,'1',1,G.CURRENCY_ID,E.EMP_FULLNAME
from HS_HR_IA_BANK_UPLOAD EC
LEFT JOIN HS_HR_EMPLOYEE E ON E.EMP_DISPLAY_NUMBER=EC.EMP_NUMBER
LEFT JOIN HS_HR_BRANCH B ON B.BBRANCH_AUTO_CLR_HOUSE_CODE=EC.BRANCH_CODE AND B.BANK_CODE=EC.BANK_CODE
LEFT JOIN HS_HR_BANK_ACCOUNT_TYPE A ON A.ACCTYPE_NAME=EC.ACCTYPE_ID
LEFT JOIN HS_HR_CURRENCY_TYPE G ON G.CURRENCY_SYMBOL=EC.CURRENCY_SYMBOL

     select 'True' as status , 'Successfully added' as message
END TRY
BEGIN CATCH  
	SELECT  
		'False' as status  
       ,ERROR_MESSAGE() AS message;  
END CATCH  
END
GO