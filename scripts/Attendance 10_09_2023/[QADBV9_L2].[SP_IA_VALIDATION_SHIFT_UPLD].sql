CREATE OR ALTER PROCEDURE [QADBV9_L2].[SP_IA_VALIDATION_SHIFT_UPLD]
@TEMPLATE_ID NVARCHAR(MAX)
AS
BEGIN
SET NOCOUNT ON;

select h.SHIFT_NAME,SHIFT_ABR, ROW_NUMBER() over (order by ID) as ROW_NUM
into #DataWithRowNumber
from HS_HR_IA_SHIFT_INFO_UPLOAD h

SELECT i.COLUMN_NAME, i.ORDINAL_POSITION as COL_NUM
into #ColNameWithColNumber
FROM INFORMATION_SCHEMA.COLUMNS i
WHERE TABLE_NAME = 'HS_HR_IA_SHIFT_INFO_UPLOAD'
group by i.ORDINAL_POSITION, i.COLUMN_NAME

DELETE FROM HS_HR_IA_ERRORS_SHIFT;
DBCC CHECKIDENT ('[HS_HR_IA_ERRORS_SHIFT]', RESEED, 0);

--For "SHIFT_NAME" No 1
insert into HS_HR_IA_ERRORS_SHIFT
select SHIFT_NAME, @TEMPLATE_ID, 'Shift Name Can Not Be Null', '', 'SHIFT_NAME','' from HS_HR_IA_SHIFT_INFO_UPLOAD
where SHIFT_NAME IS NULL;

select * into #tempTable1 from #DataWithRowNumber where SHIFT_NAME IS NULL ORDER by (SELECT NULL) OFFSET 1 rows;

INSERT INTO HS_HR_IA_ERRORS_SHIFT (SHIFT_NAME,TEMPLATE_ID,ERROR_DETAILS,COL_NUMBER,COL_NAME,ROW_NUMBER) SELECT SHIFT_NAME,@TEMPLATE_ID,'Shift Name Can Not Be Null', '1','SHIFT_NAME', ROW_NUM from #tempTable1;

SELECT * into #tempTable2
FROM #DataWithRowNumber
WHERE SHIFT_NAME IN (
    SELECT SHIFT_NAME
    FROM #DataWithRowNumber
    GROUP BY SHIFT_NAME
    HAVING COUNT(*) > 1
) ORDER BY (SELECT NULL) OFFSET 1 ROWS;

INSERT INTO HS_HR_IA_ERRORS_SHIFT (SHIFT_NAME,TEMPLATE_ID,ERROR_DETAILS,COL_NUMBER,COL_NAME,ROW_NUMBER) SELECT SHIFT_NAME,@TEMPLATE_ID,'Shift Name is duplicated', '1','SHIFT_NAME', ROW_NUM from #tempTable2;


--For "SHIFT_ABR" No 2
insert into [QADBV9_L2].HS_HR_IA_ERRORS_SHIFT
select SHIFT_NAME, @TEMPLATE_ID, 'Shift Abbriviation can not be null', '', 'SHIFT_ABR','' from HS_HR_IA_SHIFT_INFO_UPLOAD
where SHIFT_ABR IS NULL;

insert into [QADBV9_L2].HS_HR_IA_ERRORS_SHIFT
select SHIFT_NAME, @TEMPLATE_ID, 'Shift Abbriviation already exists', '', 'SHIFT_ABR','' from HS_HR_IA_SHIFT_INFO_UPLOAD
where exists(SELECT 1
    FROM HS_TA_SHIFTDEF
    WHERE HS_HR_IA_SHIFT_INFO_UPLOAD.SHIFT_ABR = HS_TA_SHIFTDEF.SFT_ABBRV) AND SHIFT_ABR IS NOT NULL;

SELECT * into #tempTable3
FROM #DataWithRowNumber
WHERE SHIFT_ABR IN (
    SELECT SHIFT_ABR
    FROM #DataWithRowNumber
    GROUP BY SHIFT_ABR
    HAVING COUNT(*) > 1
) ORDER BY (SELECT NULL) OFFSET 1 ROWS;

INSERT INTO HS_HR_IA_ERRORS_SHIFT (SHIFT_NAME,TEMPLATE_ID,ERROR_DETAILS,COL_NUMBER,COL_NAME,ROW_NUMBER) SELECT SHIFT_NAME,@TEMPLATE_ID,'Shift Abbriviation is duplicated', '2','SHIFT_ABR', ROW_NUM from #tempTable3;


--For "START_TIME" No 3
insert into [QADBV9_L2].HS_HR_IA_ERRORS_SHIFT
select SHIFT_NAME, @TEMPLATE_ID, 'Start Time can not be null', '', 'START_TIME','' from HS_HR_IA_SHIFT_INFO_UPLOAD
where START_TIME IS NULL;


--For "END_TIME" No 4
insert into [QADBV9_L2].HS_HR_IA_ERRORS_SHIFT
select SHIFT_NAME, @TEMPLATE_ID, 'End Time can not be null', '', 'END_TIME','' from HS_HR_IA_SHIFT_INFO_UPLOAD
where END_TIME IS NULL;

insert into [QADBV9_L2].HS_HR_IA_ERRORS_SHIFT
select SHIFT_NAME, @TEMPLATE_ID, 'Invalid End Time', '', 'END_TIME','' from HS_HR_IA_SHIFT_INFO_UPLOAD
where END_TIME<START_TIME;

--For "FIRST_HALF_DUR" No 5
insert into [QADBV9_L2].HS_HR_IA_ERRORS_SHIFT
select SHIFT_NAME, @TEMPLATE_ID, 'First Half Duration can not be null', '', 'FIRST_HALF_DUR','' from HS_HR_IA_SHIFT_INFO_UPLOAD
where FIRST_HALF_DUR IS NULL;

--For "SECOND_HALF_DUR" No 7
insert into [QADBV9_L2].HS_HR_IA_ERRORS_SHIFT
select SHIFT_NAME, @TEMPLATE_ID, 'Second Half Duration can not be null', '', 'SECOND_HALF_DUR','' from HS_HR_IA_SHIFT_INFO_UPLOAD
where SECOND_HALF_DUR IS NULL;

--For "BREAK_NAME" No 19
insert into [QADBV9_L2].HS_HR_IA_ERRORS_SHIFT
select SHIFT_NAME, @TEMPLATE_ID, 'Break Name already exists', '', 'BREAK_NAME','' from HS_HR_IA_SHIFT_INFO_UPLOAD
where exists(SELECT 1
    FROM HS_TA_SHIFT_SEG_MBREAK
    WHERE HS_HR_IA_SHIFT_INFO_UPLOAD.BREAK_NAME = HS_TA_SHIFT_SEG_MBREAK.SEG_BRK_NAME) AND BREAK_NAME IS NOT NULL;

--For "BREAK_DURATION" No 21
insert into [QADBV9_L2].HS_HR_IA_ERRORS_SHIFT
select SHIFT_NAME, @TEMPLATE_ID, 'Break Duration(hours) exceeds OT rounding (hh:mm:)', '', 'BREAK_DURATION','' from HS_HR_IA_SHIFT_INFO_UPLOAD
where BREAK_DURATION>OT_ROUNDING;


update E set E.COL_NUMBER = c.COL_NUM, E.ROW_NUMBER = d.ROW_NUM
from HS_HR_IA_ERRORS_SHIFT E
inner join #DataWithRowNumber d on d.SHIFT_NAME = E.SHIFT_NAME OR (E.SHIFT_NAME IS NULL AND d.SHIFT_NAME IS NULL)
inner join #ColNameWithColNumber c on c.COLUMN_NAME = E.COL_NAME

drop table #ColNameWithColNumber;
drop table #DataWithRowNumber;
drop table #tempTable1;
drop table #tempTable2;
drop table #tempTable3;
END
GO